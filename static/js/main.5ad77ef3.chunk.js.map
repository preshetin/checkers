{"version":3,"sources":["components/Checker.jsx","components/PlayableSquare.jsx","styles/boardStyles.js","components/Board.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Checker","resetHighlighted","color","style","counter","row","col","showSquares","king","currMove","useDrag","item","type","collect","monitor","isDragging","begin","end","drag","ref","backgroundColor","opacity","id","fontFamily","fontSize","textAlign","display","marginLeft","marginRight","width","PlayableSquare","children","highlighted","moveCurr","resetSquare","switchTurns","useDrop","accept","canDrop","drop","props","isOver","BoardGrid","styled","div","nonPlayableSquareStyle","border","playableSquareStyle","checkerStyle","borderRadius","position","height","top","left","cursor","boxShadow","transform","initialBoard","makeHighlighted","Board","state","selectedColor","selectedRow","selectedCol","board","selectedIsKing","makeAutoMove","b","maxMoveLength","maxMove","maxStartRow","maxStartCol","maxKing","boardVal","moves","getMoves","push","getJumps","forEach","move","r","c","length","setLocation","setState","setTimeout","setBoard","val","parseInt","newArray","i","slice","Math","abs","getCaptured","startRow","startCol","endRow","endCol","piece","colorMap","black","red","console","log","resetHiglighted","isInBounds","rows","oponnents","seen","Set","dfsUtil","add","jumps","jumped","jRow","jCol","lRow","lCol","includes","has","ans","found","captured","pop","makeBoard","blackCounter","redCounter","retVal","squareState","key","checkerColor","this","React","Component","App","backend","HTML5Backend","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5ad77ef3.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDrag } from \"react-dnd\";\n\nconst Checker = ({\n  resetHighlighted,\n  color,\n  style,\n  counter,\n  row,\n  col,\n  showSquares,\n  currMove,\n  king\n}) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: \"checker\" },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    }),\n    begin: monitor => showSquares({ color, col, row, king }),\n    end: monitor => resetHighlighted()\n  });\n  return (\n    <div\n      ref={drag}\n      style={{\n        ...style,\n        backgroundColor: color,\n        opacity: isDragging ? 0.5 : 1\n      }}\n      id={[color, counter]}\n    >\n      <div\n        style={{\n          fontFamily: \"Arial Black\",\n          fontSize: \"1em\",\n          color: \"white\",\n          textAlign: \"center\",\n          display: \"block\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          backgroundColor: \"turqoise\",\n          width: \"100%\"\n        }}\n      >\n        {king ? \"K\" : \"\"}\n      </div>\n    </div>\n  );\n};\nexport default Checker;\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\n\nconst PlayableSquare = ({\n  style,\n  children,\n  row,\n  col,\n  highlighted,\n  moveCurr,\n  resetSquare,\n  resetHighlighted,\n  switchTurns\n}) => {\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept: \"checker\",\n    canDrop: () => highlighted == 1,\n    drop: (item, monitor) => {\n      moveCurr({ row, col })\n      resetSquare({ row, col })\n      resetHighlighted()\n      switchTurns()\n    },\n    collect: (monitor, props) => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop()\n    })\n  });\n  return (\n    <div\n      ref={drop}\n      style={{\n        ...style,\n        backgroundColor:\n          (isOver && !canDrop && \"red\") ||\n          (!isOver && canDrop && \"yellow\") ||\n          (isOver && canDrop && \"green\") ||\n          \"black\"\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default PlayableSquare;\n","import styled from \"styled-components\";\n\nexport const BoardGrid = styled.div `\n  display: grid;\n  grid-template-columns: repeat(8, 12vmin);\n  grid-template-rows: repeat(8, 12vmin);\n  height: 100vh;\n`;\n\nexport const nonPlayableSquareStyle = {\n    backgroundColor: \"red\",\n    border: \"1px yellow solid\"\n};\n\nexport const playableSquareStyle = {\n    backgroundColor: \"black\",\n    border: \"1px yellow solid\"\n};\n\nexport const checkerStyle = {\n    borderRadius: \"50%\",\n    position: \"relative\",\n    height: \"90%\",\n    width: \"90%\",\n    top: \"5%\",\n    left: \"5%\",\n    cursor: \"pointer\",\n    boxShadow: \"inset 0 0 20px white\",\n    opacity: \"99%\",\n    transform: 'translate(0, 0)'\n};","import React from \"react\";\nimport Checker from \"./Checker\";\nimport PlayableSquare from \"./PlayableSquare\";\nimport {\n  nonPlayableSquareStyle,\n  playableSquareStyle,\n  checkerStyle,\n  BoardGrid\n} from \"../styles/boardStyles\";\n\nlet initialBoard = [\n  [-1, 1, -1, 1, -1, 1, -1, 1],\n  [1, -1, 1, -1, 1, -1, 1, -1],\n  [-1, 1, -1, 1, -1, 1, -1, 1],\n  [0, -1, 0, -1, 0, -1, 0, -1],\n  [-1, 0, -1, 0, -1, 0, -1, 0],\n  [2, -1, 2, -1, 2, -1, 2, -1],\n  [-1, 2, -1, 2, -1, 2, -1, 2],\n  [2, -1, 2, -1, 2, -1, 2, -1]\n];\n\nlet makeHighlighted = () => [\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0]\n];\n\nclass Board extends React.Component {\n  state = {\n    highlighted: makeHighlighted(),\n    selectedColor: null,\n    selectedRow: null,\n    selectedCol: null,\n    currMove: \"black\",\n    board: initialBoard,\n    selectedIsKing: false\n  };\n\n  makeAutoMove = () => {\n    const color = \"red\";\n    const b = this.state.board;\n    var maxMoveLength = 0;\n    var maxMove = null;\n    var maxStartRow = null;\n    var maxStartCol = null;\n    var maxKing = null;\n    for (let row = 0; row < b.length; row++) {\n      for (let col = 0; col < b[0].length; col++) {\n        const boardVal = b[row][col];\n        if (boardVal == 1 || boardVal == 3) {\n          const king = boardVal == 3;\n          const moves = this.getMoves(color, row, col, king);\n          moves.push(...this.getJumps(color, row, col, king));\n          // eslint-disable-next-line no-loop-func\n          moves.forEach(move => {\n            const [r, c] = move;\n            const length = (row - r) * (row - r) + (col - c) * (col - c)\n            if (length > maxMoveLength) {\n              maxMove = move;\n              maxMoveLength = length;\n              maxStartRow = row;\n              maxStartCol = col;\n              maxKing = king;\n            }\n          });\n        }\n      }\n    }\n    this.setLocation({\n      color,\n      row: maxStartRow,\n      col: maxStartCol,\n      king: maxKing\n    });\n    if (maxMove) {\n      const [row, col] = maxMove;\n      this.moveCurr({ row, col });\n      this.resetSquare({ row: maxStartRow, col: maxStartCol });\n      this.switchTurns();\n    }\n  };\n\n  switchTurns = () => {\n    if (this.state.currMove == \"black\") {\n      this.setState({\n        currMove: \"red\"\n      });\n      setTimeout(this.makeAutoMove, 300);\n    } else {\n      this.setState({\n        currMove: \"black\"\n      });\n    }\n  };\n\n  setBoard = ({ val, row, col }) => {\n    row = parseInt(row);\n    col = parseInt(col);\n    val = parseInt(val);\n    if (row == 0 && val == 2) {\n      val = 4;\n    } else if (row == 7 && val == 1) {\n      val = 3;\n    }\n    var newArray = [];\n    for (var i = 0; i < this.state.board.length; i++) {\n      newArray[i] = this.state.board[i].slice();\n    }\n    newArray[row][col] = val;\n    if (Math.abs(row - this.state.selectedRow) > 1) {\n      const capturedPieces = this.getCaptured({\n        startRow: this.state.selectedRow,\n        startCol: this.state.selectedCol,\n        endRow: row,\n        endCol: col,\n        color: this.state.selectedColor,\n        king: this.state.selectedIsKing\n      });\n      capturedPieces.forEach(piece => {\n        [row, col] = piece;\n        newArray[row][col] = 0;\n      });\n    }\n    this.setState({\n      board: newArray\n    });\n  };\n\n  colorMap = {\n    black: 2,\n    red: 1\n  };\n\n  moveCurr = ({ row, col }) => {\n    const { selectedColor, selectedIsKing } = this.state;\n    var val = this.colorMap[selectedColor];\n    if (selectedIsKing) {\n      val += 2;\n    }\n    console.log(\"king\", selectedIsKing);\n    this.setBoard({ col, row, val });\n  };\n\n  setLocation = ({ color, row, col, king }) => {\n    row = parseInt(row);\n    col = parseInt(col);\n    this.setState({\n      selectedCol: col,\n      selectedRow: row,\n      selectedColor: color,\n      selectedIsKing: king\n    });\n  };\n\n  resetSquare = () => {\n    this.setBoard({\n      val: 0,\n      row: this.state.selectedRow,\n      col: this.state.selectedCol\n    });\n  };\n\n  resetHiglighted = () => {\n    this.setState({ highlighted: makeHighlighted() });\n  };\n\n  showSquares = ({ color, col, row, king }) => {\n    if (this.state.currMove != color) {\n      return;\n    }\n    this.setLocation({ color, row, col, king });\n    var newArray = [];\n    for (var i = 0; i < this.state.highlighted.length; i++)\n      newArray[i] = this.state.highlighted[i].slice();\n    var moves = this.getJumps(color, row, col, king);\n    if (moves.length == 0) {\n      moves = this.getMoves(color, row, col, king);\n    }\n    moves.forEach(move => {\n      const [r, c] = move;\n      newArray[r][c] = 1;\n    });\n    this.setState({ highlighted: newArray });\n  };\n\n  isInBounds = (r, c) => r >= 0 && c >= 0 && r < 8 && c < 8;\n\n  getMoves = (color, row, col, king) => {\n    col = parseInt(col);\n    row = parseInt(row);\n    var moves = [];\n    var rows = color == \"black\" ? [-1] : [1];\n    if (king) {\n      rows = [1, -1];\n    }\n    const cols = [-1, 1];\n    cols.forEach(c => {\n      rows.forEach(r => {\n        if (this.isInBounds(row + r, col + c)) {\n          if (this.state.board[row + r][col + c] == 0) {\n            moves.push([row + r, col + c]);\n          }\n        }\n      });\n    });\n    return moves;\n  };\n\n  getJumps = (color, row, col, king) => {\n    col = parseInt(col);\n    row = parseInt(row);\n    var rows = color == \"black\" ? [-1] : [1];\n    if (king) {\n      rows = [1, -1];\n    }\n    const oponnents = color == \"black\" ? [1, 3] : [2, 4];\n    const moves = [];\n    const seen = new Set();\n    const dfsUtil = (row, col, rows) => {\n      seen.add(row * 8 + col);\n      const jumps = [];\n      rows.forEach(row => {\n        jumps.push([row, 1]);\n        jumps.push([row, -1]);\n      });\n      jumps.forEach(jumped => {\n        const [r, c] = jumped;\n        const [jRow, jCol] = [row + r, col + c];\n        const [lRow, lCol] = [row + r * 2, col + c * 2];\n        if (\n          this.isInBounds(jRow, jCol) &&\n          oponnents.includes(this.state.board[jRow][jCol])\n        ) {\n          if (\n            !seen.has(lRow * 8 + lCol) &&\n            this.isInBounds(lRow, lCol) &&\n            this.state.board[lRow][lCol] == 0\n          ) {\n            moves.push([lRow, lCol]);\n            dfsUtil(lRow, lCol, rows);\n          }\n        }\n      });\n    };\n    dfsUtil(row, col, rows);\n    return moves;\n  };\n\n  getCaptured = ({ startRow, startCol, endRow, endCol, color, king }) => {\n    var rows = color == \"black\" ? [-1] : [1];\n    if (king) {\n      rows = [1, -1];\n    }\n    const oponnents = color == \"black\" ? [1, 3] : [2, 4];\n    var ans = [];\n    var found = false;\n    const seen = new Set();\n    const dfsUtil = (row, col, rows, captured) => {\n      seen.add(row * 8 + col);\n      const jumps = [];\n      rows.forEach(row => {\n        jumps.push([row, 1]);\n        jumps.push([row, -1]);\n      });\n      jumps.forEach(jumped => {\n        const [r, c] = jumped;\n        const [jRow, jCol] = [row + r, col + c];\n        const [lRow, lCol] = [row + r * 2, col + c * 2];\n        if (\n          this.isInBounds(jRow, jCol) &&\n          oponnents.includes(this.state.board[jRow][jCol])\n        ) {\n          if (\n            !seen.has(lRow * 8 + lCol) &&\n            this.isInBounds(lRow, lCol) &&\n            this.state.board[lRow][lCol] == 0\n          ) {\n            if (found == true) {\n              return;\n            }\n            captured.push([jRow, jCol]);\n            if (lRow == endRow && lCol == endCol) {\n              ans = captured.slice();\n              found = true;\n              return;\n            }\n            dfsUtil(lRow, lCol, rows, captured.slice());\n            if (found == true) {\n              return;\n            }\n            captured.pop();\n          }\n        }\n      });\n    };\n    dfsUtil(startRow, startCol, rows, []);\n    return ans;\n  };\n\n  makeBoard = () => {\n    let blackCounter = 0;\n    let redCounter = 0;\n    let retVal = [];\n    for (let row = 0; row < 8; row++) {\n      for (let col = 0; col < 8; col++) {\n        const squareState = this.state.board[row][col];\n        switch (squareState) {\n          case -1:\n            retVal.push(\n              <div style={nonPlayableSquareStyle} key={[\"np\", row, col]}></div>\n            );\n            break;\n          default:\n            const checkerColor =\n              squareState == 1 || squareState == 3 ? \"red\" : \"black\";\n            const king = squareState > 2;\n            retVal.push(\n              <PlayableSquare\n                key={[row, col]}\n                row={row}\n                col={col}\n                style={playableSquareStyle}\n                moveCurr={this.moveCurr}\n                highlighted={this.state.highlighted[row][col]}\n                resetSquare={this.resetSquare}\n                resetHighlighted={this.resetSquare}\n                switchTurns={this.switchTurns}\n              >\n                {squareState > 0 ? (\n                  <Checker\n                    color={checkerColor}\n                    king={king}\n                    counter={\n                      checkerColor == \"red\" ? redCounter++ : blackCounter++\n                    }\n                    style={checkerStyle}\n                    row={row}\n                    col={col}\n                    showSquares={this.showSquares}\n                    resetSquare={this.resetSquare}\n                    resetHighlighted={this.resetHiglighted}\n                    currMove={this.state.currMove}\n                  ></Checker>\n                ) : null}\n              </PlayableSquare>\n            );\n            break;\n        }\n      }\n    }\n    return retVal;\n  };\n  render() {\n    return <BoardGrid>{this.makeBoard()}</BoardGrid>;\n  }\n}\n\nexport default Board;\n","import React from \"react\";\nimport Board from \"./components/Board\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <Board></Board>\n      </DndProvider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}